#!/bin/bash
#
# Notification script

set -e          # stop on errors
set -u          # stop on unset variables
set -o pipefail # stop on pipe failures

usage(){
  echo "Usage: $(basename "$0") webhook-id interface"
}

E_NOARGS=85
wh_regex="T\w*\/B\w*\/\w*"
if [ -z ${1+x} ] || [ -z ${2+x} ]; then
  usage
  exit "$E_NOARGS"
elif ! [[ $1 =~ $wh_regex ]]; then
  echo "Webhook format invalid. Expected format $wh_regex"
  usage
  exit 0
fi

wh=$1
iface=$2

endpoint="am.i.mullvad.net"
grep_result=$(host -4 $endpoint | grep 'not found' || true)

if [ "$grep_result" == "" ]; then
  result=$(sudo curl -s --interface "$iface" https://$endpoint/json || true)
  if [ "$result" == "" ]; then
    result="Interface ${iface} cannot reach Internet"
    vpn_up=false
  else
    vpn_up=$(echo "$result" | jq .mullvad_exit_ip)
  fi
else
  result=$grep_result
  vpn_up=false
fi

webmonitor_hook="https://hooks.slack.com/services/$wh"
notokfile=vpn_down
if [ "$vpn_up" != "true" ]; then
  echo "$(date) - $(basename "$0") - VPN down"
  if ! test -f "${notokfile}"; then
    content="{\"text\":\"\`$(hostname)\` - VPN is not reachable via - \`${iface}\` \n \`\`\`${result}\`\`\` \"}"
    echo "$(date) - $(basename "$0") - Calling webhook curl -s -X POST -H Content-type: application/json --data \"${content}\" \$webmonitor_hook"
    echo "$(date) - $(basename "$0") - Webhook result: $(curl -s -X POST -H 'Content-type: application/json' --data "${content}" "$webmonitor_hook")"
    touch "${notokfile}"
  fi
elif test -f "${notokfile}"; then
  content="{\"text\":\"\`$(hostname)\` - VPN reachable again via - \`${iface}\` \"}"
  echo "$(date) - $(basename "$0") - VPN is up again. Calling webhook: curl -s -X POST -H Content-type: application/json --data \"${content}\" \$webmonitor_hook"
  echo "$(date) - $(basename "$0") - Webhook result: $(curl -s -X POST -H 'Content-type: application/json' --data "${content}" "$webmonitor_hook")"
  rm "${notokfile}"
fi
